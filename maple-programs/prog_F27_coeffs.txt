## memory used=14510.5MB, alloc=246.6MB, time=78.22
  T:=100000:
  comp_F27:=proc(T)
    local F27A,aA,k,n,n1,j,k1,k2,F27AMAT,F27Aq;
    ########################################################################
    # INITIALIZE Arrays F27A and aA
     F27A:=Array(0..T):
     aA:=Array(0..T):
     for k from 0 to T do aA[k]:=0: F27A[k]:=0: od:
     F27A[0]:=1: 
    ########################################################################
# We compute the coefficients a(n):
     for n from 0 to trunc( (sqrt(9+24*T)-3)/12) do
        n1:=7*n^2+3*n: 
        for j from -n to n  do
           k:=n1-j^2: if k<= T then
           aA[k]:= aA[k]+ 1: fi:
         od:
     od:
     
     for n from 0 to trunc( (sqrt(25+24*T)-11)/12) do
        n1:=7*n^2+11*n+4:
        for j from -n to n do 
           k:=n1-j^2: if k<=T then
           aA[k]:= aA[k]- 1: fi:
         od:
     od:
     for n from 0 to trunc( (sqrt(9+24*T)-9)/12) do
        n1:=7*n^2+10*n+3: 
        for j from 0 to n  do
           k:=n1-j^2-j: if k<= T then
           aA[k]:= aA[k]-2: fi:
         od:
     od:
     
     for n from 0 to trunc( (sqrt(25+24*T)-17)/12) do
        n1:=7*n^2+18*n+11:
        for j from 0 to n do 
           k:=n1-j^2-j: if k<=T then
           aA[k]:= aA[k]+2: fi:
         od:
     od:
    ########################################################################
    # Compute coeffs of F27 and store them in Array F27A
     for n from 1 to T do
       k1:=trunc((sqrt(1+24*n)+1)/6):
       k2:=trunc((sqrt(1+24*n)-1)/6):
       
       for k from 1 to k1 do
         ##nk2:=n-2*k*(3*k-1): if nk2>2000 or nk2<1 then print("n=",n,"k=",k);fi:
         F27A[n]:=F27A[n] - (-1)^(k)*F27A[n-k*(3*k-1)/2]:
       od:
     for k from 1 to k2 do
        F27A[n]:=F27A[n] - (-1)^k*F27A[n-k*(3*k+1)/2]:
       od:
       F27A[n]:=F27A[n]+aA[n]:
     od:
    ########################################################################
    # SAVING COEFFICIENTS IN DIFFERENT FORMATS
#   (1) Saving coefficients as a matrix in a txt file using ExportMatrix.
    F27AMAT:=Matrix(T,2):
    for j from 1 to T do
       F27AMAT[j,1]:=j:
       F27AMAT[j,2]:=F27A[j]:
    od:
    ExportMatrix("F27AMAT.txt",F27AMAT);
# (2) Saving the Array fA in a dot-m file:
    save F27A,"F27A.m":
# (3) Saving the F27 as the q-series F27Aq in a dot-m-file
    F27Aq:=add(F27A[n]*q^n,n=0..T):
    save F27Aq, "F27func.m":
    RETURN():
    end:
  comp_F27(T):
quit
