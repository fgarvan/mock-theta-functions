  T:=100000:
  comp_psi15:=proc(T)
    local psi15A,aA,k,n,n1,j,k1,psi15AMAT,psi15Aq;
    ########################################################################
    # INITIALIZE Arrays psi15A and aA
     psi15A:=Array(0..T):
     aA:=Array(0..T):
     for k from 1 to T do aA[k]:=0: psi15A[k]:=0: od:
      psi15A[0]:=1: 
    ########################################################################
# We compute the coefficients a(n):
     for n from 0 to trunc( (sqrt(1+4*T)-1)/2) do
        n1:=n*(5*n+3)/2: 
        for j from -n to n  do
           k:=n1-j*(3*j+1)/2: if k<= T then
           aA[k]:= aA[k]+ (-1)^(j): fi:
         od:
     od:
     for n from 0 to trunc( sqrt(T)) do
        n1:=n*(5*n+3)/2+2*n+1:
        for j from -n to n do 
           k:=n1-j*(3*j+1)/2: if k<=T then
           aA[k]:= aA[k]+ (-1)^(j+1): fi:
         od:
     od:
    ########################################################################
    # Compute coeffs of psi15 and store them in Array psi15A
     for n from 1 to T do
       k1:=trunc (sqrt(n)):
       
       for k from 1 to k1 do
         ##nk2:=n-2*k*(3*k-1): if nk2>2000 or nk2<1 then print("n=",n,"k=",k);fi:
         psi15A[n]:=psi15A[n] - 2*(-1)^(k)*psi15A[n-k^2]:
       od:
       psi15A[n]:=psi15A[n]+aA[n]:
     od:
    ########################################################################
    # SAVING COEFFICIENTS IN DIFFERENT FORMATS
#   (1) Saving coefficients as a matrix in a txt file using ExportMatrix.
    psi15AMAT:=Matrix(T,2):
    for j from 1 to T do
       psi15AMAT[j,1]:=j:
       psi15AMAT[j,2]:=psi15A[j]:
    od:
    ExportMatrix("psi15AMAT.txt",psi15AMAT);
# (2) Saving the Array fA in a dot-m file:
    save psi15A,"psi15A.m":
# (3) Saving the psi15 as the q-series psi15Aq in a dot-m-file
    psi15Aq:=add(psi15A[n]*q^n,n=0..T):
    save psi15Aq, "psi15func.m":
    RETURN():
    end:
  comp_psi15(T):
quit
